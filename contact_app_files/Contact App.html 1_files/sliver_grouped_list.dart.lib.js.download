define(['dart_sdk', 'packages/flutter/src/widgets/widget_inspector.dart', 'packages/flutter/src/painting/basic_types.dart', 'packages/flutter/src/widgets/scroll_view.dart', 'packages/flutter/src/gestures/recognizer.dart', 'packages/flutter/src/painting/edge_insets.dart', 'packages/flutter/src/painting/alignment.dart', 'packages/flutter/src/widgets/async.dart', 'packages/flutter/src/rendering/layer.dart'], (function load__packages__grouped_list__sliver_grouped_list_dart(dart_sdk, packages__flutter__src__widgets__widget_inspector$46dart, packages__flutter__src__painting__basic_types$46dart, packages__flutter__src__widgets__scroll_view$46dart, packages__flutter__src__gestures__recognizer$46dart, packages__flutter__src__painting__edge_insets$46dart, packages__flutter__src__painting__alignment$46dart, packages__flutter__src__widgets__async$46dart, packages__flutter__src__rendering__layer$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const _interceptors = dart_sdk._interceptors;
  const collection = dart_sdk.collection;
  const ui = dart_sdk.ui;
  const async = dart_sdk.async;
  const _internal = dart_sdk._internal;
  const math = dart_sdk.math;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const basic = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__basic;
  const widget_inspector = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__widget_inspector;
  const framework = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__framework;
  const sliver = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__sliver;
  const container = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__container;
  const scroll_controller = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__scroll_controller;
  const scroll_physics = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__scroll_physics;
  const binding = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__binding;
  const media_query = packages__flutter__src__widgets__widget_inspector$46dart.src__widgets__media_query;
  const basic_types = packages__flutter__src__painting__basic_types$46dart.src__painting__basic_types;
  const scroll_view = packages__flutter__src__widgets__scroll_view$46dart.src__widgets__scroll_view;
  const recognizer = packages__flutter__src__gestures__recognizer$46dart.src__gestures__recognizer;
  const edge_insets = packages__flutter__src__painting__edge_insets$46dart.src__painting__edge_insets;
  const alignment = packages__flutter__src__painting__alignment$46dart.src__painting__alignment;
  const async$ = packages__flutter__src__widgets__async$46dart.src__widgets__async;
  const box = packages__flutter__src__rendering__layer$46dart.src__rendering__box;
  var sliver_grouped_list = Object.create(dart.library);
  var GroupedListOrder = Object.create(dart.library);
  var grouped_list = Object.create(dart.library);
  var $isEven = dartx.isEven;
  var $truncate = dartx.truncate;
  var $_get = dartx._get;
  var $length = dartx.length;
  var $_set = dartx._set;
  var $isNotEmpty = dartx.isNotEmpty;
  var $compareTo = dartx.compareTo;
  var $sort = dartx.sort;
  var $reversed = dartx.reversed;
  var $toList = dartx.toList;
  var $isOdd = dartx.isOdd;
  var $entries = dartx.entries;
  dart._checkModuleNullSafetyMode(true);
  var T$ = {
    StateOfStatefulWidget: () => (T$.StateOfStatefulWidget = dart.constFn(framework.State$(framework.StatefulWidget)))(),
    GlobalKeyOfStateOfStatefulWidget: () => (T$.GlobalKeyOfStateOfStatefulWidget = dart.constFn(framework.GlobalKey$(T$.StateOfStatefulWidget())))(),
    IdentityMapOfString$GlobalKeyOfStateOfStatefulWidget: () => (T$.IdentityMapOfString$GlobalKeyOfStateOfStatefulWidget = dart.constFn(_js_helper.IdentityMap$(core.String, T$.GlobalKeyOfStateOfStatefulWidget())))(),
    intTobool: () => (T$.intTobool = dart.constFn(dart.fnType(core.bool, [core.int])))(),
    BuildContextAndintToWidget: () => (T$.BuildContextAndintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, core.int])))(),
    StreamControllerOfint: () => (T$.StreamControllerOfint = dart.constFn(async.StreamController$(core.int)))(),
    DurationTovoid: () => (T$.DurationTovoid = dart.constFn(dart.fnType(dart.void, [core.Duration])))(),
    StreamBuilderOfint: () => (T$.StreamBuilderOfint = dart.constFn(async$.StreamBuilder$(core.int)))(),
    AsyncSnapshotOfint: () => (T$.AsyncSnapshotOfint = dart.constFn(async$.AsyncSnapshot$(core.int)))(),
    BuildContextAndAsyncSnapshotOfintToWidget: () => (T$.BuildContextAndAsyncSnapshotOfintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AsyncSnapshotOfint()])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    RenderBoxN: () => (T$.RenderBoxN = dart.constFn(dart.nullable(box.RenderBox)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: GroupedListOrder.GroupedListOrder.prototype,
        [_name$]: "GroupedListOrder.ASC",
        index: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 28,
        [_Location_line]: 79,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/sliver_grouped_list.dart"
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[2] || CT.C2,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Opacity",
        [_Location_column]: 16,
        [_Location_line]: 103,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/sliver_grouped_list.dart"
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SliverList",
        [_Location_column]: 12,
        [_Location_line]: 99,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/sliver_grouped_list.dart"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 12,
        [_Location_line]: 123,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/sliver_grouped_list.dart"
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: GroupedListOrder.GroupedListOrder.prototype,
        [_name$]: "GroupedListOrder.DESC",
        index: 1
      });
    },
    get C7() {
      return C[7] = dart.constList([C[0] || CT.C0, C[6] || CT.C6], GroupedListOrder.GroupedListOrder);
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "SizedBox",
        [_Location_column]: 28,
        [_Location_line]: 196,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget__location]: C[9] || CT.C9,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 0,
        [SizedBox_width]: 0
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294440951.0
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [_name]: "Axis.vertical",
        index: 1
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: ui.Clip.prototype,
        [_name$0]: "Clip.hardEdge",
        index: 1
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: scroll_view.ScrollViewKeyboardDismissBehavior.prototype,
        [_name$1]: "ScrollViewKeyboardDismissBehavior.manual",
        index: 0
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [_name$2]: "DragStartBehavior.start",
        index: 1
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Opacity",
        [_Location_column]: 22,
        [_Location_line]: 296,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "ListView",
        [_Location_column]: 18,
        [_Location_line]: 273,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 22,
        [_Location_line]: 320,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "StreamBuilder",
        [_Location_column]: 9,
        [_Location_line]: 313,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Stack",
        [_Location_column]: 12,
        [_Location_line]: 269,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 12,
        [_Location_line]: 329,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 14,
        [_Location_line]: 410,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: widget_inspector._Location.prototype,
        [_Location_name]: "Container",
        [_Location_column]: 12,
        [_Location_line]: 418,
        [_Location_file]: "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart"
      });
    }
  }, false);
  var C = Array(23).fill(void 0);
  var I = [
    "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/sliver_grouped_list.dart",
    "package:grouped_list/sliver_grouped_list.dart",
    "package:grouped_list/src/GroupedListOrder.dart",
    "file:///C:/Development/flutter/.pub-cache/hosted/pub.dartlang.org/grouped_list-4.1.0/lib/grouped_list.dart",
    "package:grouped_list/grouped_list.dart"
  ];
  var elements$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.elements");
  var groupBy$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.groupBy");
  var groupComparator$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.groupComparator");
  var itemComparator$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.itemComparator");
  var groupSeparatorBuilder$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.groupSeparatorBuilder");
  var groupHeaderBuilder$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.groupHeaderBuilder");
  var itemBuilder$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.itemBuilder");
  var indexedItemBuilder$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.indexedItemBuilder");
  var order$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.order");
  var sort$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.sort");
  var separator$ = dart.privateName(sliver_grouped_list, "SliverGroupedListView.separator");
  var _name$ = dart.privateName(GroupedListOrder, "_name");
  var _Location_name = dart.privateName(widget_inspector, "_Location.name");
  var _Location_column = dart.privateName(widget_inspector, "_Location.column");
  var _Location_line = dart.privateName(widget_inspector, "_Location.line");
  var _Location_file = dart.privateName(widget_inspector, "_Location.file");
  var Widget__location = dart.privateName(framework, "Widget._location");
  var Widget_key = dart.privateName(framework, "Widget.key");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  const _is_SliverGroupedListView_default = Symbol('_is_SliverGroupedListView_default');
  sliver_grouped_list.SliverGroupedListView$ = dart.generic((T, E) => {
    var __t$_SliverGroupedListViewStateOfT$E = () => (__t$_SliverGroupedListViewStateOfT$E = dart.constFn(sliver_grouped_list._SliverGroupedListViewState$(T, E)))();
    class SliverGroupedListView extends framework.StatefulWidget {
      get elements() {
        return this[elements$];
      }
      set elements(value) {
        super.elements = value;
      }
      get groupBy() {
        return this[groupBy$];
      }
      set groupBy(value) {
        super.groupBy = value;
      }
      get groupComparator() {
        return this[groupComparator$];
      }
      set groupComparator(value) {
        super.groupComparator = value;
      }
      get itemComparator() {
        return this[itemComparator$];
      }
      set itemComparator(value) {
        super.itemComparator = value;
      }
      get groupSeparatorBuilder() {
        return this[groupSeparatorBuilder$];
      }
      set groupSeparatorBuilder(value) {
        super.groupSeparatorBuilder = value;
      }
      get groupHeaderBuilder() {
        return this[groupHeaderBuilder$];
      }
      set groupHeaderBuilder(value) {
        super.groupHeaderBuilder = value;
      }
      get itemBuilder() {
        return this[itemBuilder$];
      }
      set itemBuilder(value) {
        super.itemBuilder = value;
      }
      get indexedItemBuilder() {
        return this[indexedItemBuilder$];
      }
      set indexedItemBuilder(value) {
        super.indexedItemBuilder = value;
      }
      get order() {
        return this[order$];
      }
      set order(value) {
        super.order = value;
      }
      get sort() {
        return this[sort$];
      }
      set sort(value) {
        super.sort = value;
      }
      get separator() {
        return this[separator$];
      }
      set separator(value) {
        super.separator = value;
      }
      createState() {
        return new (__t$_SliverGroupedListViewStateOfT$E()).new();
      }
    }
    (SliverGroupedListView.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let elements = opts && 'elements' in opts ? opts.elements : null;
      let groupBy = opts && 'groupBy' in opts ? opts.groupBy : null;
      let groupComparator = opts && 'groupComparator' in opts ? opts.groupComparator : null;
      let groupSeparatorBuilder = opts && 'groupSeparatorBuilder' in opts ? opts.groupSeparatorBuilder : null;
      let groupHeaderBuilder = opts && 'groupHeaderBuilder' in opts ? opts.groupHeaderBuilder : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let indexedItemBuilder = opts && 'indexedItemBuilder' in opts ? opts.indexedItemBuilder : null;
      let itemComparator = opts && 'itemComparator' in opts ? opts.itemComparator : null;
      let order = opts && 'order' in opts ? opts.order : C[0] || CT.C0;
      let sort = opts && 'sort' in opts ? opts.sort : true;
      let separator = opts && 'separator' in opts ? opts.separator : C[1] || CT.C1;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[elements$] = elements;
      this[groupBy$] = groupBy;
      this[groupComparator$] = groupComparator;
      this[groupSeparatorBuilder$] = groupSeparatorBuilder;
      this[groupHeaderBuilder$] = groupHeaderBuilder;
      this[itemBuilder$] = itemBuilder;
      this[indexedItemBuilder$] = indexedItemBuilder;
      this[itemComparator$] = itemComparator;
      this[order$] = order;
      this[sort$] = sort;
      this[separator$] = separator;
      if (!(itemBuilder != null || indexedItemBuilder != null)) dart.assertFailed(null, I[0], 80, 16, "itemBuilder != null || indexedItemBuilder != null");
      if (!(groupSeparatorBuilder != null || groupHeaderBuilder != null)) dart.assertFailed(null, I[0], 81, 16, "groupSeparatorBuilder != null || groupHeaderBuilder != null");
      SliverGroupedListView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = SliverGroupedListView.prototype;
    dart.addTypeTests(SliverGroupedListView);
    SliverGroupedListView.prototype[_is_SliverGroupedListView_default] = true;
    dart.addTypeCaches(SliverGroupedListView);
    dart.setMethodSignature(SliverGroupedListView, () => ({
      __proto__: dart.getMethods(SliverGroupedListView.__proto__),
      createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
    }));
    dart.setLibraryUri(SliverGroupedListView, I[1]);
    dart.setFieldSignature(SliverGroupedListView, () => ({
      __proto__: dart.getFields(SliverGroupedListView.__proto__),
      elements: dart.finalFieldType(core.List$(T)),
      groupBy: dart.finalFieldType(dart.fnType(E, [T])),
      groupComparator: dart.finalFieldType(dart.nullable(dart.fnType(core.int, [E, E]))),
      itemComparator: dart.finalFieldType(dart.nullable(dart.fnType(core.int, [T, T]))),
      groupSeparatorBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [E]))),
      groupHeaderBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [T]))),
      itemBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, T]))),
      indexedItemBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, T, core.int]))),
      order: dart.finalFieldType(GroupedListOrder.GroupedListOrder),
      sort: dart.finalFieldType(core.bool),
      separator: dart.finalFieldType(framework.Widget)
    }));
    return SliverGroupedListView;
  });
  sliver_grouped_list.SliverGroupedListView = sliver_grouped_list.SliverGroupedListView$();
  dart.addTypeTests(sliver_grouped_list.SliverGroupedListView, _is_SliverGroupedListView_default);
  var _keys = dart.privateName(sliver_grouped_list, "_keys");
  var _sortedElements = dart.privateName(sliver_grouped_list, "_sortedElements");
  var _sortElements = dart.privateName(sliver_grouped_list, "_sortElements");
  var _buildGroupSeparator = dart.privateName(sliver_grouped_list, "_buildGroupSeparator");
  var _buildItem = dart.privateName(sliver_grouped_list, "_buildItem");
  const _is__SliverGroupedListViewState_default = Symbol('_is__SliverGroupedListViewState_default');
  sliver_grouped_list._SliverGroupedListViewState$ = dart.generic((T, E) => {
    var __t$JSArrayOfT = () => (__t$JSArrayOfT = dart.constFn(_interceptors.JSArray$(T)))();
    var __t$TToE = () => (__t$TToE = dart.constFn(dart.fnType(E, [T])))();
    var __t$BuildContextAndTAndintToWidget = () => (__t$BuildContextAndTAndintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, core.int])))();
    var __t$BuildContextAndTAndintToNWidget = () => (__t$BuildContextAndTAndintToNWidget = dart.constFn(dart.nullable(__t$BuildContextAndTAndintToWidget())))();
    var __t$BuildContextAndTToWidget = () => (__t$BuildContextAndTToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNWidget = () => (__t$BuildContextAndTToNWidget = dart.constFn(dart.nullable(__t$BuildContextAndTToWidget())))();
    var __t$TAndTToint = () => (__t$TAndTToint = dart.constFn(dart.fnType(core.int, [T, T])))();
    var __t$TAndTToNint = () => (__t$TAndTToNint = dart.constFn(dart.nullable(__t$TAndTToint())))();
    var __t$TToWidget = () => (__t$TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    var __t$TToNWidget = () => (__t$TToNWidget = dart.constFn(dart.nullable(__t$TToWidget())))();
    var __t$EAndEToint = () => (__t$EAndEToint = dart.constFn(dart.fnType(core.int, [E, E])))();
    var __t$EAndEToNint = () => (__t$EAndEToNint = dart.constFn(dart.nullable(__t$EAndEToint())))();
    var __t$EToWidget = () => (__t$EToWidget = dart.constFn(dart.fnType(framework.Widget, [E])))();
    var __t$EToNWidget = () => (__t$EToNWidget = dart.constFn(dart.nullable(__t$EToWidget())))();
    class _SliverGroupedListViewState extends framework.State$(sliver_grouped_list.SliverGroupedListView$(T, E)) {
      build(context) {
        this[_sortedElements] = this[_sortElements]();
        let hiddenIndex = 0;
        let _isSeparator = dart.fn(i => i[$isEven], T$.intTobool());
        return new sliver.SliverList.new({delegate: new sliver.SliverChildBuilderDelegate.new(dart.fn((context, index) => {
            let t1, t0, t1$, t0$;
            let actualIndex = (index / 2)[$truncate]();
            if (index === hiddenIndex) {
              return new basic.Opacity.new({opacity: 1.0, child: this[_buildGroupSeparator](this[_sortedElements][$_get](actualIndex)), $creationLocationd_0dea112b090073317d4: C[3] || CT.C3});
            }
            if (_isSeparator(index)) {
              let curr = (t0 = this.widget, t1 = this[_sortedElements][$_get](actualIndex), __t$TToE().as(t0.groupBy)(t1));
              let prev = (t0$ = this.widget, t1$ = this[_sortedElements][$_get](actualIndex - 1), __t$TToE().as(t0$.groupBy)(t1$));
              if (!dart.equals(prev, curr)) {
                return this[_buildGroupSeparator](this[_sortedElements][$_get](actualIndex));
              }
              return this.widget.separator;
            }
            return this[_buildItem](context, actualIndex);
          }, T$.BuildContextAndintToWidget()), {childCount: this[_sortedElements][$length] * 2}), $creationLocationd_0dea112b090073317d4: C[4] || CT.C4});
      }
      [_buildItem](context, actualIndex) {
        let key = T$.GlobalKeyOfStateOfStatefulWidget().new();
        this[_keys][$_set](dart.str(actualIndex), key);
        return new container.Container.new({key: key, child: __t$BuildContextAndTAndintToNWidget().as(this.widget.indexedItemBuilder) == null ? dart.nullCheck(__t$BuildContextAndTToNWidget().as(this.widget.itemBuilder))(framework.BuildContext.as(context), this[_sortedElements][$_get](actualIndex)) : dart.nullCheck(__t$BuildContextAndTAndintToNWidget().as(this.widget.indexedItemBuilder))(framework.BuildContext.as(context), this[_sortedElements][$_get](actualIndex), actualIndex), $creationLocationd_0dea112b090073317d4: C[5] || CT.C5});
      }
      [_sortElements]() {
        let elements = this.widget.elements;
        if (this.widget.sort && elements[$isNotEmpty]) {
          elements[$sort](dart.fn((e1, e2) => {
            let t1, t0, t1$, t0$, t1$0, t0$0, t1$1, t0$1, t1$2, t0$2;
            let compareResult = null;
            if (__t$EAndEToNint().as(this.widget.groupComparator) != null) {
              compareResult = dart.nullCheck(__t$EAndEToNint().as(this.widget.groupComparator))((t0 = this.widget, t1 = e1, __t$TToE().as(t0.groupBy)(t1)), (t0$ = this.widget, t1$ = e2, __t$TToE().as(t0$.groupBy)(t1$)));
            } else if (core.Comparable.is((t0$0 = this.widget, t1$0 = e1, __t$TToE().as(t0$0.groupBy)(t1$0)))) {
              compareResult = core.Comparable.as((t0$1 = this.widget, t1$1 = e1, __t$TToE().as(t0$1.groupBy)(t1$1)))[$compareTo](core.Comparable.as((t0$2 = this.widget, t1$2 = e2, __t$TToE().as(t0$2.groupBy)(t1$2))));
            }
            if (compareResult == null || dart.equals(compareResult, 0)) {
              if (__t$TAndTToNint().as(this.widget.itemComparator) != null) {
                compareResult = dart.nullCheck(__t$TAndTToNint().as(this.widget.itemComparator))(e1, e2);
              } else if (core.Comparable.is(e1)) {
                compareResult = e1[$compareTo](e2);
              }
            }
            return core.int.as(compareResult);
          }, __t$TAndTToint()));
          if (this.widget.order === GroupedListOrder.GroupedListOrder.DESC) {
            elements = elements[$reversed][$toList]();
          }
        }
        return elements;
      }
      [_buildGroupSeparator](element) {
        let t1, t0;
        if (__t$TToNWidget().as(this.widget.groupHeaderBuilder) == null) {
          return dart.nullCheck(__t$EToNWidget().as(this.widget.groupSeparatorBuilder))((t0 = this.widget, t1 = element, __t$TToE().as(t0.groupBy)(t1)));
        }
        return dart.nullCheck(__t$TToNWidget().as(this.widget.groupHeaderBuilder))(element);
      }
    }
    (_SliverGroupedListViewState.new = function() {
      this[_keys] = new (T$.IdentityMapOfString$GlobalKeyOfStateOfStatefulWidget()).new();
      this[_sortedElements] = __t$JSArrayOfT().of([]);
      _SliverGroupedListViewState.__proto__.new.call(this);
      ;
    }).prototype = _SliverGroupedListViewState.prototype;
    dart.addTypeTests(_SliverGroupedListViewState);
    _SliverGroupedListViewState.prototype[_is__SliverGroupedListViewState_default] = true;
    dart.addTypeCaches(_SliverGroupedListViewState);
    dart.setMethodSignature(_SliverGroupedListViewState, () => ({
      __proto__: dart.getMethods(_SliverGroupedListViewState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_buildItem]: dart.fnType(container.Container, [dart.dynamic, core.int]),
      [_sortElements]: dart.fnType(core.List$(T), []),
      [_buildGroupSeparator]: dart.fnType(framework.Widget, [T])
    }));
    dart.setLibraryUri(_SliverGroupedListViewState, I[1]);
    dart.setFieldSignature(_SliverGroupedListViewState, () => ({
      __proto__: dart.getFields(_SliverGroupedListViewState.__proto__),
      [_keys]: dart.finalFieldType(collection.LinkedHashMap$(core.String, framework.GlobalKey$(framework.State$(framework.StatefulWidget)))),
      [_sortedElements]: dart.fieldType(core.List$(T))
    }));
    return _SliverGroupedListViewState;
  });
  sliver_grouped_list._SliverGroupedListViewState = sliver_grouped_list._SliverGroupedListViewState$();
  dart.addTypeTests(sliver_grouped_list._SliverGroupedListViewState, _is__SliverGroupedListViewState_default);
  GroupedListOrder.GroupedListOrder = class GroupedListOrder extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (GroupedListOrder.GroupedListOrder.new = function(index, _name) {
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = GroupedListOrder.GroupedListOrder.prototype;
  dart.addTypeTests(GroupedListOrder.GroupedListOrder);
  dart.addTypeCaches(GroupedListOrder.GroupedListOrder);
  GroupedListOrder.GroupedListOrder[dart.implements] = () => [core.Enum];
  dart.setLibraryUri(GroupedListOrder.GroupedListOrder, I[2]);
  dart.setFieldSignature(GroupedListOrder.GroupedListOrder, () => ({
    __proto__: dart.getFields(GroupedListOrder.GroupedListOrder.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(GroupedListOrder.GroupedListOrder, ['toString']);
  GroupedListOrder.GroupedListOrder.ASC = C[0] || CT.C0;
  GroupedListOrder.GroupedListOrder.DESC = C[6] || CT.C6;
  GroupedListOrder.GroupedListOrder.values = C[7] || CT.C7;
  var elements$0 = dart.privateName(grouped_list, "GroupedListView.elements");
  var groupBy$0 = dart.privateName(grouped_list, "GroupedListView.groupBy");
  var groupComparator$0 = dart.privateName(grouped_list, "GroupedListView.groupComparator");
  var itemComparator$0 = dart.privateName(grouped_list, "GroupedListView.itemComparator");
  var groupSeparatorBuilder$0 = dart.privateName(grouped_list, "GroupedListView.groupSeparatorBuilder");
  var groupHeaderBuilder$0 = dart.privateName(grouped_list, "GroupedListView.groupHeaderBuilder");
  var itemBuilder$0 = dart.privateName(grouped_list, "GroupedListView.itemBuilder");
  var indexedItemBuilder$0 = dart.privateName(grouped_list, "GroupedListView.indexedItemBuilder");
  var order$0 = dart.privateName(grouped_list, "GroupedListView.order");
  var sort$0 = dart.privateName(grouped_list, "GroupedListView.sort");
  var useStickyGroupSeparators$ = dart.privateName(grouped_list, "GroupedListView.useStickyGroupSeparators");
  var separator$0 = dart.privateName(grouped_list, "GroupedListView.separator");
  var floatingHeader$ = dart.privateName(grouped_list, "GroupedListView.floatingHeader");
  var stickyHeaderBackgroundColor$ = dart.privateName(grouped_list, "GroupedListView.stickyHeaderBackgroundColor");
  var controller$ = dart.privateName(grouped_list, "GroupedListView.controller");
  var scrollDirection$ = dart.privateName(grouped_list, "GroupedListView.scrollDirection");
  var primary$ = dart.privateName(grouped_list, "GroupedListView.primary");
  var physics$ = dart.privateName(grouped_list, "GroupedListView.physics");
  var shrinkWrap$ = dart.privateName(grouped_list, "GroupedListView.shrinkWrap");
  var padding$ = dart.privateName(grouped_list, "GroupedListView.padding");
  var reverse$ = dart.privateName(grouped_list, "GroupedListView.reverse");
  var addAutomaticKeepAlives$ = dart.privateName(grouped_list, "GroupedListView.addAutomaticKeepAlives");
  var addRepaintBoundaries$ = dart.privateName(grouped_list, "GroupedListView.addRepaintBoundaries");
  var addSemanticIndexes$ = dart.privateName(grouped_list, "GroupedListView.addSemanticIndexes");
  var cacheExtent$ = dart.privateName(grouped_list, "GroupedListView.cacheExtent");
  var clipBehavior$ = dart.privateName(grouped_list, "GroupedListView.clipBehavior");
  var dragStartBehavior$ = dart.privateName(grouped_list, "GroupedListView.dragStartBehavior");
  var keyboardDismissBehavior$ = dart.privateName(grouped_list, "GroupedListView.keyboardDismissBehavior");
  var restorationId$ = dart.privateName(grouped_list, "GroupedListView.restorationId");
  var semanticChildCount$ = dart.privateName(grouped_list, "GroupedListView.semanticChildCount");
  var itemExtent$ = dart.privateName(grouped_list, "GroupedListView.itemExtent");
  var Color_value = dart.privateName(ui, "Color.value");
  var _name = dart.privateName(basic_types, "_name");
  var _name$0 = dart.privateName(ui, "_name");
  var _name$1 = dart.privateName(scroll_view, "_name");
  var _name$2 = dart.privateName(recognizer, "_name");
  const _is_GroupedListView_default = Symbol('_is_GroupedListView_default');
  grouped_list.GroupedListView$ = dart.generic((T, E) => {
    var __t$_GroupedListViewStateOfT$E = () => (__t$_GroupedListViewStateOfT$E = dart.constFn(grouped_list._GroupedListViewState$(T, E)))();
    class GroupedListView extends framework.StatefulWidget {
      get elements() {
        return this[elements$0];
      }
      set elements(value) {
        super.elements = value;
      }
      get groupBy() {
        return this[groupBy$0];
      }
      set groupBy(value) {
        super.groupBy = value;
      }
      get groupComparator() {
        return this[groupComparator$0];
      }
      set groupComparator(value) {
        super.groupComparator = value;
      }
      get itemComparator() {
        return this[itemComparator$0];
      }
      set itemComparator(value) {
        super.itemComparator = value;
      }
      get groupSeparatorBuilder() {
        return this[groupSeparatorBuilder$0];
      }
      set groupSeparatorBuilder(value) {
        super.groupSeparatorBuilder = value;
      }
      get groupHeaderBuilder() {
        return this[groupHeaderBuilder$0];
      }
      set groupHeaderBuilder(value) {
        super.groupHeaderBuilder = value;
      }
      get itemBuilder() {
        return this[itemBuilder$0];
      }
      set itemBuilder(value) {
        super.itemBuilder = value;
      }
      get indexedItemBuilder() {
        return this[indexedItemBuilder$0];
      }
      set indexedItemBuilder(value) {
        super.indexedItemBuilder = value;
      }
      get order() {
        return this[order$0];
      }
      set order(value) {
        super.order = value;
      }
      get sort() {
        return this[sort$0];
      }
      set sort(value) {
        super.sort = value;
      }
      get useStickyGroupSeparators() {
        return this[useStickyGroupSeparators$];
      }
      set useStickyGroupSeparators(value) {
        super.useStickyGroupSeparators = value;
      }
      get separator() {
        return this[separator$0];
      }
      set separator(value) {
        super.separator = value;
      }
      get floatingHeader() {
        return this[floatingHeader$];
      }
      set floatingHeader(value) {
        super.floatingHeader = value;
      }
      get stickyHeaderBackgroundColor() {
        return this[stickyHeaderBackgroundColor$];
      }
      set stickyHeaderBackgroundColor(value) {
        super.stickyHeaderBackgroundColor = value;
      }
      get controller() {
        return this[controller$];
      }
      set controller(value) {
        super.controller = value;
      }
      get scrollDirection() {
        return this[scrollDirection$];
      }
      set scrollDirection(value) {
        super.scrollDirection = value;
      }
      get primary() {
        return this[primary$];
      }
      set primary(value) {
        super.primary = value;
      }
      get physics() {
        return this[physics$];
      }
      set physics(value) {
        super.physics = value;
      }
      get shrinkWrap() {
        return this[shrinkWrap$];
      }
      set shrinkWrap(value) {
        super.shrinkWrap = value;
      }
      get padding() {
        return this[padding$];
      }
      set padding(value) {
        super.padding = value;
      }
      get reverse() {
        return this[reverse$];
      }
      set reverse(value) {
        super.reverse = value;
      }
      get addAutomaticKeepAlives() {
        return this[addAutomaticKeepAlives$];
      }
      set addAutomaticKeepAlives(value) {
        super.addAutomaticKeepAlives = value;
      }
      get addRepaintBoundaries() {
        return this[addRepaintBoundaries$];
      }
      set addRepaintBoundaries(value) {
        super.addRepaintBoundaries = value;
      }
      get addSemanticIndexes() {
        return this[addSemanticIndexes$];
      }
      set addSemanticIndexes(value) {
        super.addSemanticIndexes = value;
      }
      get cacheExtent() {
        return this[cacheExtent$];
      }
      set cacheExtent(value) {
        super.cacheExtent = value;
      }
      get clipBehavior() {
        return this[clipBehavior$];
      }
      set clipBehavior(value) {
        super.clipBehavior = value;
      }
      get dragStartBehavior() {
        return this[dragStartBehavior$];
      }
      set dragStartBehavior(value) {
        super.dragStartBehavior = value;
      }
      get keyboardDismissBehavior() {
        return this[keyboardDismissBehavior$];
      }
      set keyboardDismissBehavior(value) {
        super.keyboardDismissBehavior = value;
      }
      get restorationId() {
        return this[restorationId$];
      }
      set restorationId(value) {
        super.restorationId = value;
      }
      get semanticChildCount() {
        return this[semanticChildCount$];
      }
      set semanticChildCount(value) {
        super.semanticChildCount = value;
      }
      get itemExtent() {
        return this[itemExtent$];
      }
      set itemExtent(value) {
        super.itemExtent = value;
      }
      createState() {
        return new (__t$_GroupedListViewStateOfT$E()).new();
      }
    }
    (GroupedListView.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let elements = opts && 'elements' in opts ? opts.elements : null;
      let groupBy = opts && 'groupBy' in opts ? opts.groupBy : null;
      let groupComparator = opts && 'groupComparator' in opts ? opts.groupComparator : null;
      let groupSeparatorBuilder = opts && 'groupSeparatorBuilder' in opts ? opts.groupSeparatorBuilder : null;
      let groupHeaderBuilder = opts && 'groupHeaderBuilder' in opts ? opts.groupHeaderBuilder : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let indexedItemBuilder = opts && 'indexedItemBuilder' in opts ? opts.indexedItemBuilder : null;
      let itemComparator = opts && 'itemComparator' in opts ? opts.itemComparator : null;
      let order = opts && 'order' in opts ? opts.order : C[0] || CT.C0;
      let sort = opts && 'sort' in opts ? opts.sort : true;
      let useStickyGroupSeparators = opts && 'useStickyGroupSeparators' in opts ? opts.useStickyGroupSeparators : false;
      let separator = opts && 'separator' in opts ? opts.separator : C[8] || CT.C8;
      let floatingHeader = opts && 'floatingHeader' in opts ? opts.floatingHeader : false;
      let stickyHeaderBackgroundColor = opts && 'stickyHeaderBackgroundColor' in opts ? opts.stickyHeaderBackgroundColor : C[10] || CT.C10;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[11] || CT.C11;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[12] || CT.C12;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[13] || CT.C13;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[14] || CT.C14;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let itemExtent = opts && 'itemExtent' in opts ? opts.itemExtent : null;
      let $36creationLocationd_0dea112b090073317d4 = opts && '$creationLocationd_0dea112b090073317d4' in opts ? opts.$creationLocationd_0dea112b090073317d4 : null;
      this[elements$0] = elements;
      this[groupBy$0] = groupBy;
      this[groupComparator$0] = groupComparator;
      this[groupSeparatorBuilder$0] = groupSeparatorBuilder;
      this[groupHeaderBuilder$0] = groupHeaderBuilder;
      this[itemBuilder$0] = itemBuilder;
      this[indexedItemBuilder$0] = indexedItemBuilder;
      this[itemComparator$0] = itemComparator;
      this[order$0] = order;
      this[sort$0] = sort;
      this[useStickyGroupSeparators$] = useStickyGroupSeparators;
      this[separator$0] = separator;
      this[floatingHeader$] = floatingHeader;
      this[stickyHeaderBackgroundColor$] = stickyHeaderBackgroundColor;
      this[scrollDirection$] = scrollDirection;
      this[controller$] = controller;
      this[primary$] = primary;
      this[physics$] = physics;
      this[shrinkWrap$] = shrinkWrap;
      this[padding$] = padding;
      this[reverse$] = reverse;
      this[addAutomaticKeepAlives$] = addAutomaticKeepAlives;
      this[addRepaintBoundaries$] = addRepaintBoundaries;
      this[addSemanticIndexes$] = addSemanticIndexes;
      this[cacheExtent$] = cacheExtent;
      this[clipBehavior$] = clipBehavior;
      this[keyboardDismissBehavior$] = keyboardDismissBehavior;
      this[dragStartBehavior$] = dragStartBehavior;
      this[restorationId$] = restorationId;
      this[semanticChildCount$] = semanticChildCount;
      this[itemExtent$] = itemExtent;
      if (!(itemBuilder != null || indexedItemBuilder != null)) dart.assertFailed(null, I[3], 216, 16, "itemBuilder != null || indexedItemBuilder != null");
      if (!(groupSeparatorBuilder != null || groupHeaderBuilder != null)) dart.assertFailed(null, I[3], 217, 16, "groupSeparatorBuilder != null || groupHeaderBuilder != null");
      GroupedListView.__proto__.new.call(this, {key: key, $creationLocationd_0dea112b090073317d4: $36creationLocationd_0dea112b090073317d4});
      ;
    }).prototype = GroupedListView.prototype;
    dart.addTypeTests(GroupedListView);
    GroupedListView.prototype[_is_GroupedListView_default] = true;
    dart.addTypeCaches(GroupedListView);
    dart.setMethodSignature(GroupedListView, () => ({
      __proto__: dart.getMethods(GroupedListView.__proto__),
      createState: dart.fnType(framework.State$(framework.StatefulWidget), [])
    }));
    dart.setLibraryUri(GroupedListView, I[4]);
    dart.setFieldSignature(GroupedListView, () => ({
      __proto__: dart.getFields(GroupedListView.__proto__),
      elements: dart.finalFieldType(core.List$(T)),
      groupBy: dart.finalFieldType(dart.fnType(E, [T])),
      groupComparator: dart.finalFieldType(dart.nullable(dart.fnType(core.int, [E, E]))),
      itemComparator: dart.finalFieldType(dart.nullable(dart.fnType(core.int, [T, T]))),
      groupSeparatorBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [E]))),
      groupHeaderBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [T]))),
      itemBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, T]))),
      indexedItemBuilder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, T, core.int]))),
      order: dart.finalFieldType(GroupedListOrder.GroupedListOrder),
      sort: dart.finalFieldType(core.bool),
      useStickyGroupSeparators: dart.finalFieldType(core.bool),
      separator: dart.finalFieldType(framework.Widget),
      floatingHeader: dart.finalFieldType(core.bool),
      stickyHeaderBackgroundColor: dart.finalFieldType(ui.Color),
      controller: dart.finalFieldType(dart.nullable(scroll_controller.ScrollController)),
      scrollDirection: dart.finalFieldType(basic_types.Axis),
      primary: dart.finalFieldType(dart.nullable(core.bool)),
      physics: dart.finalFieldType(dart.nullable(scroll_physics.ScrollPhysics)),
      shrinkWrap: dart.finalFieldType(core.bool),
      padding: dart.finalFieldType(dart.nullable(edge_insets.EdgeInsetsGeometry)),
      reverse: dart.finalFieldType(core.bool),
      addAutomaticKeepAlives: dart.finalFieldType(core.bool),
      addRepaintBoundaries: dart.finalFieldType(core.bool),
      addSemanticIndexes: dart.finalFieldType(core.bool),
      cacheExtent: dart.finalFieldType(dart.nullable(core.double)),
      clipBehavior: dart.finalFieldType(ui.Clip),
      dragStartBehavior: dart.finalFieldType(recognizer.DragStartBehavior),
      keyboardDismissBehavior: dart.finalFieldType(scroll_view.ScrollViewKeyboardDismissBehavior),
      restorationId: dart.finalFieldType(dart.nullable(core.String)),
      semanticChildCount: dart.finalFieldType(dart.nullable(core.int)),
      itemExtent: dart.finalFieldType(dart.nullable(core.double))
    }));
    return GroupedListView;
  });
  grouped_list.GroupedListView = grouped_list.GroupedListView$();
  dart.addTypeTests(grouped_list.GroupedListView, _is_GroupedListView_default);
  var _streamController = dart.privateName(grouped_list, "_streamController");
  var _keys$ = dart.privateName(grouped_list, "_keys");
  var _key = dart.privateName(grouped_list, "_key");
  var ___GroupedListViewState__controller = dart.privateName(grouped_list, "_#_GroupedListViewState#_controller");
  var _groupHeaderKey = dart.privateName(grouped_list, "_groupHeaderKey");
  var _sortedElements$ = dart.privateName(grouped_list, "_sortedElements");
  var _topElementIndex = dart.privateName(grouped_list, "_topElementIndex");
  var _headerBox = dart.privateName(grouped_list, "_headerBox");
  var _listBox = dart.privateName(grouped_list, "_listBox");
  var _controller = dart.privateName(grouped_list, "_controller");
  var _scrollListener = dart.privateName(grouped_list, "_scrollListener");
  var _sortElements$ = dart.privateName(grouped_list, "_sortElements");
  var _buildGroupSeparator$ = dart.privateName(grouped_list, "_buildGroupSeparator");
  var _buildItem$ = dart.privateName(grouped_list, "_buildItem");
  var _showFixedGroupHeader = dart.privateName(grouped_list, "_showFixedGroupHeader");
  var _isListItemRendered = dart.privateName(grouped_list, "_isListItemRendered");
  const _is__GroupedListViewState_default = Symbol('_is__GroupedListViewState_default');
  grouped_list._GroupedListViewState$ = dart.generic((T, E) => {
    var __t$JSArrayOfT = () => (__t$JSArrayOfT = dart.constFn(_interceptors.JSArray$(T)))();
    var __t$TToE = () => (__t$TToE = dart.constFn(dart.fnType(E, [T])))();
    var __t$BuildContextAndTAndintToWidget = () => (__t$BuildContextAndTAndintToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, core.int])))();
    var __t$BuildContextAndTAndintToNWidget = () => (__t$BuildContextAndTAndintToNWidget = dart.constFn(dart.nullable(__t$BuildContextAndTAndintToWidget())))();
    var __t$BuildContextAndTToWidget = () => (__t$BuildContextAndTToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNWidget = () => (__t$BuildContextAndTToNWidget = dart.constFn(dart.nullable(__t$BuildContextAndTToWidget())))();
    var __t$TAndTToint = () => (__t$TAndTToint = dart.constFn(dart.fnType(core.int, [T, T])))();
    var __t$TAndTToNint = () => (__t$TAndTToNint = dart.constFn(dart.nullable(__t$TAndTToint())))();
    var __t$TToWidget = () => (__t$TToWidget = dart.constFn(dart.fnType(framework.Widget, [T])))();
    var __t$TToNWidget = () => (__t$TToNWidget = dart.constFn(dart.nullable(__t$TToWidget())))();
    var __t$EAndEToint = () => (__t$EAndEToint = dart.constFn(dart.fnType(core.int, [E, E])))();
    var __t$EAndEToNint = () => (__t$EAndEToNint = dart.constFn(dart.nullable(__t$EAndEToint())))();
    var __t$EToWidget = () => (__t$EToWidget = dart.constFn(dart.fnType(framework.Widget, [E])))();
    var __t$EToNWidget = () => (__t$EToNWidget = dart.constFn(dart.nullable(__t$EToWidget())))();
    class _GroupedListViewState extends framework.State$(grouped_list.GroupedListView$(T, E)) {
      get [_controller]() {
        let t0;
        t0 = this[___GroupedListViewState__controller];
        return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t0;
      }
      set [_controller](t0) {
        if (this[___GroupedListViewState__controller] == null)
          this[___GroupedListViewState__controller] = t0;
        else
          dart.throw(new _internal.LateError.fieldAI("_controller"));
      }
      initState() {
        let t1;
        this[_controller] = (t1 = this.widget.controller, t1 == null ? new scroll_controller.ScrollController.new() : t1);
        if (this.widget.useStickyGroupSeparators) {
          this[_controller].addListener(dart.bind(this, _scrollListener));
        }
        super.initState();
      }
      dispose() {
        if (this.widget.useStickyGroupSeparators) {
          this[_controller].removeListener(dart.bind(this, _scrollListener));
        }
        if (this.widget.controller == null) {
          this[_controller].dispose();
        }
        this[_streamController].close();
        super.dispose();
      }
      build(context) {
        this[_sortedElements$] = this[_sortElements$]();
        let hiddenIndex = this.widget.reverse ? this[_sortedElements$][$length] * 2 - 1 : 0;
        let _isSeparator = this.widget.reverse ? dart.fn(i => i[$isOdd], T$.intTobool()) : dart.fn(i => i[$isEven], T$.intTobool());
        if (this.widget.reverse) {
          dart.nullCheck(binding.WidgetsBinding.instance).addPostFrameCallback(dart.fn(_ => {
            this[_scrollListener]();
          }, T$.DurationTovoid()));
        }
        return new basic.Stack.new({key: this[_key], alignment: alignment.Alignment.topCenter, children: T$.JSArrayOfWidget().of([new scroll_view.ListView.builder({key: this.widget.key, scrollDirection: this.widget.scrollDirection, controller: this[_controller], primary: this.widget.primary, physics: this.widget.physics, shrinkWrap: this.widget.shrinkWrap, padding: this.widget.padding, reverse: this.widget.reverse, clipBehavior: this.widget.clipBehavior, dragStartBehavior: this.widget.dragStartBehavior, itemExtent: this.widget.itemExtent, restorationId: this.widget.restorationId, keyboardDismissBehavior: this.widget.keyboardDismissBehavior, semanticChildCount: this.widget.semanticChildCount, itemCount: this[_sortedElements$][$length] * 2, addAutomaticKeepAlives: this.widget.addAutomaticKeepAlives, addRepaintBoundaries: this.widget.addRepaintBoundaries, addSemanticIndexes: this.widget.addSemanticIndexes, cacheExtent: this.widget.cacheExtent, itemBuilder: dart.fn((context, index) => {
                let t2, t1, t2$, t1$;
                let actualIndex = (index / 2)[$truncate]();
                if (index === hiddenIndex) {
                  return new basic.Opacity.new({opacity: this.widget.useStickyGroupSeparators ? 0.0 : 1.0, child: this[_buildGroupSeparator$](this[_sortedElements$][$_get](actualIndex)), $creationLocationd_0dea112b090073317d4: C[15] || CT.C15});
                }
                if (_isSeparator(index)) {
                  let curr = (t1 = this.widget, t2 = this[_sortedElements$][$_get](actualIndex), __t$TToE().as(t1.groupBy)(t2));
                  let prev = (t1$ = this.widget, t2$ = this[_sortedElements$][$_get](actualIndex + (this.widget.reverse ? 1 : -1)), __t$TToE().as(t1$.groupBy)(t2$));
                  if (!dart.equals(prev, curr)) {
                    return this[_buildGroupSeparator$](this[_sortedElements$][$_get](actualIndex));
                  }
                  return this.widget.separator;
                }
                return this[_buildItem$](context, actualIndex);
              }, T$.BuildContextAndintToWidget()), $creationLocationd_0dea112b090073317d4: C[16] || CT.C16}), new (T$.StreamBuilderOfint()).new({stream: this[_streamController].stream, initialData: this[_topElementIndex], builder: dart.fn((context, snapshot) => {
                if (snapshot.hasData) {
                  return this[_showFixedGroupHeader](dart.nullCheck(snapshot.data));
                }
                return new container.Container.new({$creationLocationd_0dea112b090073317d4: C[17] || CT.C17});
              }, T$.BuildContextAndAsyncSnapshotOfintToWidget()), $creationLocationd_0dea112b090073317d4: C[18] || CT.C18})]), $creationLocationd_0dea112b090073317d4: C[19] || CT.C19});
      }
      [_buildItem$](context, actualIndex) {
        let key = T$.GlobalKeyOfStateOfStatefulWidget().new();
        this[_keys$][$_set](dart.str(actualIndex), key);
        return new container.Container.new({key: key, child: __t$BuildContextAndTAndintToNWidget().as(this.widget.indexedItemBuilder) == null ? dart.nullCheck(__t$BuildContextAndTToNWidget().as(this.widget.itemBuilder))(framework.BuildContext.as(context), this[_sortedElements$][$_get](actualIndex)) : dart.nullCheck(__t$BuildContextAndTAndintToNWidget().as(this.widget.indexedItemBuilder))(framework.BuildContext.as(context), this[_sortedElements$][$_get](actualIndex), actualIndex), $creationLocationd_0dea112b090073317d4: C[20] || CT.C20});
      }
      [_scrollListener]() {
        let t1, t1$, t1$0, t2, t1$1, t1$2, t1$3, t2$, t1$4, t2$0, t1$5;
        this[_listBox] == null ? this[_listBox] = T$.RenderBoxN().as((t1 = this[_key].currentContext, t1 == null ? null : t1.findRenderObject())) : null;
        let listPos = (t1$0 = (t1$ = this[_listBox], t1$ == null ? null : t1$.localToGlobal(ui.Offset.zero).dy), t1$0 == null ? 0.0 : t1$0);
        this[_headerBox] == null ? this[_headerBox] = T$.RenderBoxN().as((t1$1 = this[_groupHeaderKey], t1$1 == null ? null : (t2 = t1$1.currentContext, t2 == null ? null : t2.findRenderObject()))) : null;
        let headerHeight = (t1$3 = (t1$2 = this[_headerBox], t1$2 == null ? null : t1$2.size.height), t1$3 == null ? 0.0 : t1$3);
        let max = -1 / 0;
        let topItemKey = this.widget.reverse ? dart.str(this[_sortedElements$][$length] - 1) : "0";
        for (let entry of this[_keys$][$entries]) {
          let key = entry.value;
          if (this[_isListItemRendered](key)) {
            let itemBox = box.RenderBox.as(dart.nullCheck(key.currentContext).findRenderObject());
            let y = itemBox.localToGlobal(new ui.Offset.new(0.0, -listPos - headerHeight)).dy;
            if (y <= headerHeight && y > max) {
              topItemKey = entry.key;
              max = y;
            }
          }
        }
        let index = math.max(core.int, core.int.parse(topItemKey), 0);
        if (index !== this[_topElementIndex]) {
          let curr = (t1$4 = this.widget, t2$ = this[_sortedElements$][$_get](index), __t$TToE().as(t1$4.groupBy)(t2$));
          let prev = (t1$5 = this.widget, t2$0 = this[_sortedElements$][$_get](this[_topElementIndex]), __t$TToE().as(t1$5.groupBy)(t2$0));
          if (!dart.equals(prev, curr)) {
            this[_topElementIndex] = index;
            this[_streamController].add(this[_topElementIndex]);
          }
        }
      }
      [_sortElements$]() {
        let elements = this.widget.elements;
        if (this.widget.sort && elements[$isNotEmpty]) {
          elements[$sort](dart.fn((e1, e2) => {
            let t2, t1, t2$, t1$, t2$0, t1$0, t2$1, t1$1, t2$2, t1$2;
            let compareResult = null;
            if (__t$EAndEToNint().as(this.widget.groupComparator) != null) {
              compareResult = dart.nullCheck(__t$EAndEToNint().as(this.widget.groupComparator))((t1 = this.widget, t2 = e1, __t$TToE().as(t1.groupBy)(t2)), (t1$ = this.widget, t2$ = e2, __t$TToE().as(t1$.groupBy)(t2$)));
            } else if (core.Comparable.is((t1$0 = this.widget, t2$0 = e1, __t$TToE().as(t1$0.groupBy)(t2$0)))) {
              compareResult = core.Comparable.as((t1$1 = this.widget, t2$1 = e1, __t$TToE().as(t1$1.groupBy)(t2$1)))[$compareTo](core.Comparable.as((t1$2 = this.widget, t2$2 = e2, __t$TToE().as(t1$2.groupBy)(t2$2))));
            }
            if (compareResult == null || dart.equals(compareResult, 0)) {
              if (__t$TAndTToNint().as(this.widget.itemComparator) != null) {
                compareResult = dart.nullCheck(__t$TAndTToNint().as(this.widget.itemComparator))(e1, e2);
              } else if (core.Comparable.is(e1)) {
                compareResult = e1[$compareTo](e2);
              }
            }
            return core.int.as(compareResult);
          }, __t$TAndTToint()));
          if (this.widget.order === GroupedListOrder.GroupedListOrder.DESC) {
            elements = elements[$reversed][$toList]();
          }
        }
        return elements;
      }
      [_showFixedGroupHeader](topElementIndex) {
        this[_groupHeaderKey] = T$.GlobalKeyOfStateOfStatefulWidget().new();
        if (this.widget.useStickyGroupSeparators && this.widget.elements[$isNotEmpty]) {
          let topElement = null;
          try {
            topElement = this[_sortedElements$][$_get](topElementIndex);
          } catch (e) {
            let _ = dart.getThrown(e);
            if (core.RangeError.is(_)) {
              topElement = this[_sortedElements$][$_get](0);
            } else
              throw e;
          }
          return new container.Container.new({key: this[_groupHeaderKey], color: this.widget.floatingHeader ? null : this.widget.stickyHeaderBackgroundColor, width: this.widget.floatingHeader ? null : media_query.MediaQuery.of(this.context).size.width, child: this[_buildGroupSeparator$](topElement), $creationLocationd_0dea112b090073317d4: C[21] || CT.C21});
        }
        return new container.Container.new({$creationLocationd_0dea112b090073317d4: C[22] || CT.C22});
      }
      [_isListItemRendered](key) {
        return key.currentContext != null && dart.nullCheck(key.currentContext).findRenderObject() != null;
      }
      [_buildGroupSeparator$](element) {
        let t3, t2;
        if (__t$TToNWidget().as(this.widget.groupHeaderBuilder) == null) {
          return dart.nullCheck(__t$EToNWidget().as(this.widget.groupSeparatorBuilder))((t2 = this.widget, t3 = element, __t$TToE().as(t2.groupBy)(t3)));
        }
        return dart.nullCheck(__t$TToNWidget().as(this.widget.groupHeaderBuilder))(element);
      }
    }
    (_GroupedListViewState.new = function() {
      this[_streamController] = T$.StreamControllerOfint().new();
      this[_keys$] = new (T$.IdentityMapOfString$GlobalKeyOfStateOfStatefulWidget()).new();
      this[_key] = T$.GlobalKeyOfStateOfStatefulWidget().new();
      this[___GroupedListViewState__controller] = null;
      this[_groupHeaderKey] = null;
      this[_sortedElements$] = __t$JSArrayOfT().of([]);
      this[_topElementIndex] = 0;
      this[_headerBox] = null;
      this[_listBox] = null;
      _GroupedListViewState.__proto__.new.call(this);
      ;
    }).prototype = _GroupedListViewState.prototype;
    dart.addTypeTests(_GroupedListViewState);
    _GroupedListViewState.prototype[_is__GroupedListViewState_default] = true;
    dart.addTypeCaches(_GroupedListViewState);
    dart.setMethodSignature(_GroupedListViewState, () => ({
      __proto__: dart.getMethods(_GroupedListViewState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext]),
      [_buildItem$]: dart.fnType(container.Container, [dart.dynamic, core.int]),
      [_scrollListener]: dart.fnType(dart.void, []),
      [_sortElements$]: dart.fnType(core.List$(T), []),
      [_showFixedGroupHeader]: dart.fnType(framework.Widget, [core.int]),
      [_isListItemRendered]: dart.fnType(core.bool, [framework.GlobalKey$(framework.State$(framework.StatefulWidget))]),
      [_buildGroupSeparator$]: dart.fnType(framework.Widget, [T])
    }));
    dart.setGetterSignature(_GroupedListViewState, () => ({
      __proto__: dart.getGetters(_GroupedListViewState.__proto__),
      [_controller]: scroll_controller.ScrollController
    }));
    dart.setSetterSignature(_GroupedListViewState, () => ({
      __proto__: dart.getSetters(_GroupedListViewState.__proto__),
      [_controller]: scroll_controller.ScrollController
    }));
    dart.setLibraryUri(_GroupedListViewState, I[4]);
    dart.setFieldSignature(_GroupedListViewState, () => ({
      __proto__: dart.getFields(_GroupedListViewState.__proto__),
      [_streamController]: dart.finalFieldType(async.StreamController$(core.int)),
      [_keys$]: dart.finalFieldType(collection.LinkedHashMap$(core.String, framework.GlobalKey$(framework.State$(framework.StatefulWidget)))),
      [_key]: dart.finalFieldType(framework.GlobalKey$(framework.State$(framework.StatefulWidget))),
      [___GroupedListViewState__controller]: dart.fieldType(dart.nullable(scroll_controller.ScrollController)),
      [_groupHeaderKey]: dart.fieldType(dart.nullable(framework.GlobalKey$(framework.State$(framework.StatefulWidget)))),
      [_sortedElements$]: dart.fieldType(core.List$(T)),
      [_topElementIndex]: dart.fieldType(core.int),
      [_headerBox]: dart.fieldType(dart.nullable(box.RenderBox)),
      [_listBox]: dart.fieldType(dart.nullable(box.RenderBox))
    }));
    return _GroupedListViewState;
  });
  grouped_list._GroupedListViewState = grouped_list._GroupedListViewState$();
  dart.addTypeTests(grouped_list._GroupedListViewState, _is__GroupedListViewState_default);
  dart.trackLibraries("packages/grouped_list/sliver_grouped_list.dart", {
    "package:grouped_list/sliver_grouped_list.dart": sliver_grouped_list,
    "package:grouped_list/src/GroupedListOrder.dart": GroupedListOrder,
    "package:grouped_list/grouped_list.dart": grouped_list
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["sliver_grouped_list.dart","src/GroupedListOrder.dart","grouped_list.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MASgB;;;;;;MAMc;;;;;;MAMY;;;;;;MAMI;;;;;;MAMZ;;;;;;MAOE;;;;;;MAIsB;;;;;;MAKpD;;;;;;MAKmB;;;;;;MAMZ;;;;;;MAGE;;;;;;;AAqB0B;MAAmC;;;UAjBnE;UACS;UACA;UACT;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;MAVS;MACA;MACT;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;YACM,AAAoB,WAAT,YAAY,kBAAkB;YACzC,AAA8B,qBAAT,YAAY,kBAAkB;AAC1D,2DAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAYK;AACS,QAAjC,wBAAkB;AACd,0BAAc;AACd,2BAAe,QAAK,KAAM,AAAE,CAAD;AAE/B,cAAO,sCACO,0CAA2B,SAAC,SAAS;;AAC7C,8BAAoB,CAAN,KAAK,GAAI;AAC3B,gBAAI,AAAM,KAAD,KAAI,WAAW;AACtB,oBAAO,iCACI,YACF,2BAAqB,AAAe,6BAAC,WAAW;;AAG3D,gBAAI,AAAY,YAAA,CAAC,KAAK;AAChB,+BAAO,kBAAe,AAAe,6BAAC,WAAW,GAA5B,cAAP;AACd,gCAAO,mBAAe,AAAe,6BAAC,AAAY,WAAD,GAAG,IAA/B,cAAP;AAClB,+BAAI,IAAI,EAAI,IAAI;AACd,sBAAO,4BAAqB,AAAe,6BAAC,WAAW;;AAEzD,oBAAO,AAAO;;AAEhB,kBAAO,kBAAW,OAAO,EAAE,WAAW;4DACzB,AAAgB,AAAO,iCAAE;MAC1C;mBAEqB,SAAa;AAC5B,kBAAM;AACiB,QAA3B,AAAK,mBAAe,SAAZ,WAAW,GAAK,GAAG;AAC3B,cAAO,mCACE,GAAG,SACyB,yCAA1B,AAAO,0CACU,AAAC,kDAAnB,AAAO,oDAAa,OAAO,GAAE,AAAe,6BAAC,WAAW,KAC/B,AAAC,wDAA1B,AAAO,2DACL,OAAO,GAAE,AAAe,6BAAC,WAAW,GAAG,WAAW;MAChE;;AAGM,uBAAW,AAAO;AACtB,YAAI,AAAO,oBAAQ,AAAS,QAAD;AAoBvB,UAnBF,AAAS,QAAD,QAAM,SAAC,IAAI;;AACb;AAEJ,qCAAI,AAAO;AAE0D,cADnE,gBAC0B,AAAC,oCAAvB,AAAO,oCAAiB,kBAAe,EAAE,EAAH,cAAP,yBAAa,mBAAe,EAAE,EAAH,cAAP;kBAClD,KAAuB,2BAAnB,oBAAe,EAAE,EAAH,cAAP;AAEgC,cADhD,gBAAoC,AAC/B,2BADY,oBAAe,EAAE,EAAH,cAAP,kCACU,2BAAnB,oBAAe,EAAE,EAAH,cAAP;;AAGxB,gBAAK,AAAc,aAAD,YAA0B,YAAd,aAAa,EAAI;AAC7C,uCAAI,AAAO;AACqC,gBAA9C,gBAAqC,AAAC,oCAAtB,AAAO,6BAAgB,EAAE,EAAE,EAAE;oBACxC,KAAO,mBAAH,EAAE;AACqB,gBAAhC,gBAAgB,AAAG,EAAD,aAAW,EAAE;;;AAGnC,+BAAO,aAAa;;AAEtB,cAAI,AAAO,AAAM,sBAAoB;AACE,YAArC,WAAW,AAAS,AAAS,QAAV;;;AAGvB,cAAO,SAAQ;MACjB;6BAE8B;;AAC5B,YAA8B,oBAA1B,AAAO;AACT,gBAAmC,AAAC,oCAA7B,AAAO,0CAAuB,kBAAe,OAAO,EAAR,cAAP;;AAE9C,cAAgC,AAAC,oCAA1B,AAAO,iCAAoB,OAAO;MAC3C;;;MA5EuC,cAAQ;MACvC,wBAAkB;;;IA4E5B;;;;;;;;;;;;;;;;;;;;;;;;IClKkC;;2DAA7B;;;;EAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MCalB;;;;;;MAMc;;;;;;MAMY;;;;;;MAMI;;;;;;MAMZ;;;;;;MAOE;;;;;;MAIsB;;;;;;MAKpD;;;;;;MAKmB;;;;;;MAMZ;;;;;;MAIA;;;;;;MAGE;;;;;;MAGF;;;;;;MAIC;;;;;;MAMY;;;;;;MAKb;;;;;;MAMC;;;;;;MAKS;;;;;;MAMV;;;;;;MAGe;;;;;;MAOf;;;;;;MAKA;;;;;;MAKA;;;;;;MAKA;;;;;;MAKG;;;;;;MAKH;;;;;;MAGa;;;;;;MAIgB;;;;;;MAG1B;;;;;;MAeH;;;;;;MASG;;;;;;;AAyCyB;MAA6B;;;UArC7D;UACS;UACA;UACT;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;MA9BS;MACA;MACT;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;YACM,AAAoB,WAAT,YAAY,kBAAkB;YACzC,AAA8B,qBAAT,YAAY,kBAAkB;AAC1D,qDAAW,GAAG;;IAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUO;;MAAW;;AAAX;;;;MAAW;;;AASgB,QAArD,qBAAgC,KAAlB,AAAO,wBAAA,aAAc;AACnC,YAAI,AAAO;AAC+B,UAAxC,AAAY,wCAAY;;AAET,QAAX;MACR;;AAIE,YAAI,AAAO;AACkC,UAA3C,AAAY,2CAAe;;AAE7B,YAAI,AAAO,AAAW;AACC,UAArB,AAAY;;AAEW,QAAzB,AAAkB;AACH,QAAT;MACR;YAG0B;AACS,QAAjC,yBAAkB;AACd,0BAAc,AAAO,sBAAU,AAAgB,AAAO,AAAI,kCAAF,IAAI,IAAI;AAChE,2BACA,AAAO,sBAAU,QAAK,KAAM,AAAE,CAAD,4BAAS,QAAK,KAAM,AAAE,CAAD;AAEtD,YAAI,AAAO;AAGP,UAFqB,AAAE,eAAV,sDAA+B,QAAC;AAC5B,YAAjB;;;AAIJ,cAAO,2BACA,uBACgB,yCACH,yBACP,uCACF,AAAO,kCACK,AAAO,yCACZ,4BACH,AAAO,8BACP,AAAO,iCACJ,AAAO,iCACV,AAAO,8BACP,AAAO,mCACF,AAAO,6CACF,AAAO,2CACd,AAAO,uCACJ,AAAO,oDACG,AAAO,yDACZ,AAAO,2CAChB,AAAgB,AAAO,kCAAE,2BACZ,AAAO,0DACT,AAAO,sDACT,AAAO,6CACd,AAAO,sCACP,SAAC,SAAS;;AACjB,kCAAoB,CAAN,KAAK,GAAI;AAC3B,oBAAI,AAAM,KAAD,KAAI,WAAW;AACtB,wBAAO,iCACI,AAAO,uCAA2B,MAAI,YACxC,4BAAqB,AAAe,8BAAC,WAAW;;AAG3D,oBAAI,AAAY,YAAA,CAAC,KAAK;AAChB,mCAAO,kBAAe,AAAe,8BAAC,WAAW,GAA5B,cAAP;AACd,oCAAO,mBACP,AAAe,8BAAC,AAAY,WAAD,IAAI,AAAO,sBAAU,IAAI,CAAC,KADhC,cAAP;AAElB,mCAAI,IAAI,EAAI,IAAI;AACd,0BAAO,6BAAqB,AAAe,8BAAC,WAAW;;AAEzD,wBAAO,AAAO;;AAEhB,sBAAO,mBAAW,OAAO,EAAE,WAAW;8GAG1C,2CACY,AAAkB,6CACb,iCACJ,SAAC,SAAS;AACjB,oBAAI,AAAS,QAAD;AACV,wBAAO,6BAAmC,eAAb,AAAS,QAAD;;AAEvC,sBAAO;;MAInB;oBAEqB,SAAa;AAC5B,kBAAM;AACiB,QAA3B,AAAK,oBAAe,SAAZ,WAAW,GAAK,GAAG;AAC3B,cAAO,mCACE,GAAG,SACyB,yCAA1B,AAAO,0CACU,AAAC,kDAAnB,AAAO,oDAAa,OAAO,GAAE,AAAe,8BAAC,WAAW,KAC/B,AAAC,wDAA1B,AAAO,2DACL,OAAO,GAAE,AAAe,8BAAC,WAAW,GAAG,WAAW;MAChE;;;AAGoE,QAAzD,yBAAT,iBAAqD,yBAAxC,AAAK,wCAAA,OAAgB,0BAAzB;AACL,uBAAkD,4CAAxC,OAAU,AAA2B,kBAAN,qBAA/B,eAA2C;AAEY,QAD1D,2BAAX,mBACwD,yEAApD,KAAiB,kCAAjB,OAAiC,2BAD1B;AAEP,4BAAuC,gDAAxB,OAAY,AAAK,mBAAjB,eAA2B;AAC1C;AACA,yBAAa,AAAO,sBAA0C,SAA7B,AAAgB,AAAO,kCAAE,KAAM;AACpE,iBAAS,QAAS,AAAM;AAClB,oBAAM,AAAM,KAAD;AACf,cAAI,0BAAoB,GAAG;AACrB,0BAAiD,iBAArB,AAAE,eAApB,AAAI,GAAD;AAEb,oBAAI,AAAQ,AAAkD,OAAnD,eAAe,kBAAO,KAAG,AAAS,CAAR,OAAO,GAAG,YAAY;AAC/D,gBAAI,AAAE,CAAD,IAAI,YAAY,IAAI,AAAE,CAAD,GAAG,GAAG;AACR,cAAtB,aAAa,AAAM,KAAD;AACX,cAAP,MAAM,CAAC;;;;AAIT,oBAAQ,mBAAa,eAAM,UAAU,GAAG;AAC5C,YAAI,KAAK,KAAI;AACP,6BAAO,mBAAe,AAAe,8BAAC,KAAK,GAAtB,cAAP;AACd,6BAAO,oBAAe,AAAe,8BAAC,yBAAjB,cAAP;AAElB,2BAAI,IAAI,EAAI,IAAI;AACU,YAAxB,yBAAmB,KAAK;AACe,YAAvC,AAAkB,4BAAI;;;MAG5B;;AAGM,uBAAW,AAAO;AACtB,YAAI,AAAO,oBAAQ,AAAS,QAAD;AAoBvB,UAnBF,AAAS,QAAD,QAAM,SAAC,IAAI;;AACb;AAEJ,qCAAI,AAAO;AAE0D,cADnE,gBAC0B,AAAC,oCAAvB,AAAO,oCAAiB,kBAAe,EAAE,EAAH,cAAP,yBAAa,mBAAe,EAAE,EAAH,cAAP;kBAClD,KAAuB,2BAAnB,oBAAe,EAAE,EAAH,cAAP;AAEgC,cADhD,gBAAoC,AAC/B,2BADY,oBAAe,EAAE,EAAH,cAAP,kCACU,2BAAnB,oBAAe,EAAE,EAAH,cAAP;;AAGxB,gBAAK,AAAc,aAAD,YAA0B,YAAd,aAAa,EAAI;AAC7C,uCAAI,AAAO;AACqC,gBAA9C,gBAAqC,AAAC,oCAAtB,AAAO,6BAAgB,EAAE,EAAE,EAAE;oBACxC,KAAO,mBAAH,EAAE;AACqB,gBAAhC,gBAAgB,AAAG,EAAD,aAAW,EAAE;;;AAGnC,+BAAO,aAAa;;AAEtB,cAAI,AAAO,AAAM,sBAAoB;AACE,YAArC,WAAW,AAAS,AAAS,QAAV;;;AAGvB,cAAO,SAAQ;MACjB;8BAEiC;AACF,QAA7B,wBAAkB;AAClB,YAAI,AAAO,wCAA4B,AAAO,AAAS;AACnD;AAEF;AAC+C,YAA7C,aAAa,AAAe,8BAAC,eAAe;;gBACvB;AAArB;AAC+B,cAA/B,aAAa,AAAe,8BAAC;;;;AAG/B,gBAAO,mCACA,8BAED,AAAO,6BAAiB,OAAO,AAAO,gDACnC,AAAO,6BAAiB,OAAkB,AAAY,AAAK,0BAAd,iCAC7C,4BAAqB,UAAU;;AAG1C,cAAO;MACT;4BAE0D;AACxD,cAAO,AAAI,AAAuB,IAAxB,2BACY,AAAE,eAApB,AAAI,GAAD;MACT;8BAE8B;;AAC5B,YAA8B,oBAA1B,AAAO;AACT,gBAAmC,AAAC,oCAA7B,AAAO,0CAAuB,kBAAe,OAAO,EAAR,cAAP;;AAE9C,cAAgC,AAAC,oCAA1B,AAAO,iCAAoB,OAAO;MAC3C;;;MA9M4B,0BAAoB;MACT,eAAQ;MAC/B,aAAO;kDACK;MACjB;MACH,yBAAkB;MACtB,yBAAmB;MACZ;MACA;;;IAuMb","file":"../../../../../../../packages/grouped_list/sliver_grouped_list.dart.lib.js"}');
  // Exports:
  return {
    sliver_grouped_list: sliver_grouped_list,
    src__GroupedListOrder: GroupedListOrder,
    grouped_list: grouped_list
  };
}));

//# sourceMappingURL=sliver_grouped_list.dart.lib.js.map
